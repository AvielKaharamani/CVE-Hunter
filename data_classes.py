from dataclasses import dataclass, field
from enum import Enum


class PackageFileType(Enum):
    REQUIREMENTS_TEXT = 1
    PACKAGE_JSON = 2
    UNSUPPORTED = 3


@dataclass
class Cve:
    description: str
    fix_version: str


@dataclass
class LibraryCves:
    library: str
    version: str
    cves: dict[str, Cve] = field(default_factory=dict)

    def __str__(self):
        library_str = ''
        max_description_len = 30

        if not self.cves:
            return '{:<20}{:<30}{:<20}{:<15}{:.{max_length}}'.format(
                self.library, self.version, 'None', 'None', 'None',
                max_length=max_description_len)

        for cve_id, cve_info in self.cves.items():
            row_str = '{:<20}{:<30}{:<20}{:<15}{:.{max_length}}'.format(
                self.library, self.version, cve_id, cve_info.fix_version, cve_info.description,
                max_length=max_description_len)

            if len(cve_info.description) > max_description_len:
                row_str += '...'
            row_str += '\n'

            library_str += row_str

        return library_str[:-1]
