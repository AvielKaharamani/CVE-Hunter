import logging
import sys
from helper import Helper
from data_retriever import DataRetriever
from data_classes import PackageFileType


class CveFinder:
    @staticmethod
    def search_cves(package_path: str):
        """
        Function reads the third-party libraries and searches CVEs in them
        :param package_path: path to the requirements.txt file
        :yield: Library CVE information
        """
        with open(package_path, 'r') as file:
            file_data = file.read()

        package_type = PackageFileType.UNSUPPORTED
        if package_path.endswith('requirements.txt'):
            package_type = PackageFileType.REQUIREMENTS_TEXT
        elif package_path.endswith('package.json'):
            package_type = PackageFileType.PACKAGE_JSON

        if package_type == PackageFileType.UNSUPPORTED:
            logging.error(f'{package_path} is unsupported')
            sys.exit(1)

        dependencies = Helper.parse_file(file_data, package_type)

        for dependency in dependencies:
            try:
                library_search_result = DataRetriever.extract_cves(dependency.library, dependency.version, package_type)
                yield library_search_result
            except (RuntimeError, LookupError) as e:
                logging.error(e)
