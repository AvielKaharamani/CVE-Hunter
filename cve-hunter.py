import argparse
import logging
from datetime import datetime
from cve_finder import CveFinder
from helper import Helper


def main():
    parser = argparse.ArgumentParser(description='Search CVEs in a requirements.txt/package.json file')
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-r', '--requirements', metavar='<path-to-requirements.txt>',
                       help='path to requirements.txt/package.json file')
    group.add_argument('-p', '--package', metavar='<path-to-package.json>',
                       help='path to package.json file')

    args = parser.parse_args()

    date_time_str = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    logging.basicConfig(
        level=logging.ERROR,
        format='%(asctime)s %(levelname)-8s %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S',
        filename=f'cve_hunter_{date_time_str}.log',
        filemode='w')

    package_file_path = args.requirements if args.requirements is not None else args.package

    cve_result = CveFinder.search_cves(package_file_path)
    Helper.print_result_table(cve_result)


if __name__ == '__main__':
    main()
